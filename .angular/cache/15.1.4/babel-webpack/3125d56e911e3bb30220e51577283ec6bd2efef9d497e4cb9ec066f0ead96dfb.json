{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { RouterModule } from '@angular/router';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { LoadingInterceptor } from './interceptors/loading.interceptor';\nimport { HttpErrorInterceptor } from './interceptors/http-error.interceptor';\nimport { MaterialModule } from '../material/material/material.module';\nimport { ToolbarComponent } from './components/toolbar/toolbar.component';\nimport { LoadingComponent } from './components/loading/loading.component';\nimport * as i0 from \"@angular/core\";\nconst CORE_COMPONENTS = [ToolbarComponent, LoadingComponent];\nconst MODULES = [FlexLayoutModule, MaterialModule, RouterModule];\nexport class CoreModule {\n  constructor(parentModule) {\n    if (parentModule) {\n      throw new Error('CoreModule has already been loaded. Import this module in the AppModule only.');\n    }\n  }\n}\nCoreModule.ɵfac = function CoreModule_Factory(t) {\n  return new (t || CoreModule)(i0.ɵɵinject(CoreModule, 12));\n};\nCoreModule.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n  type: CoreModule\n});\nCoreModule.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n  providers: [{\n    provide: HTTP_INTERCEPTORS,\n    useClass: LoadingInterceptor,\n    multi: true\n  }, {\n    provide: HTTP_INTERCEPTORS,\n    useClass: HttpErrorInterceptor,\n    multi: true\n  }],\n  imports: [CommonModule, MODULES]\n});\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(CoreModule, {\n    declarations: [ToolbarComponent, LoadingComponent],\n    imports: [CommonModule, FlexLayoutModule, MaterialModule, RouterModule],\n    exports: [ToolbarComponent, LoadingComponent]\n  });\n})();","map":{"version":3,"mappings":"AAAA,SAASA,YAAY,QAAQ,iBAAiB;AAE9C,SAASC,gBAAgB,QAAQ,sBAAsB;AACvD,SAASC,YAAY,QAAQ,iBAAiB;AAC9C,SAASC,iBAAiB,QAAQ,sBAAsB;AACxD,SAASC,kBAAkB,QAAQ,oCAAoC;AACvE,SAASC,oBAAoB,QAAQ,uCAAuC;AAC5E,SAASC,cAAc,QAAQ,sCAAsC;AACrE,SAASC,gBAAgB,QAAQ,wCAAwC;AACzE,SAASC,gBAAgB,QAAQ,wCAAwC;;AAEzE,MAAMC,eAAe,GAAG,CAACF,gBAAgB,EAAEC,gBAAgB,CAAC;AAC5D,MAAME,OAAO,GAAG,CAACT,gBAAgB,EAAEK,cAAc,EAAEJ,YAAY,CAAC;AAmBhE,OAAM,MAAOS,UAAU;EACrBC,YAAoCC,YAAyB;IAC3D,IAAIA,YAAY,EAAE;MAChB,MAAM,IAAIC,KAAK,CACb,+EAA+E,CAChF;;EAEL;;AAPWH,UAAU;mBAAVA,UAAU;AAAA;AAAVA,UAAU;QAAVA;AAAU;AAAVA,UAAU;aAbV,CACT;IACEI,OAAO,EAAEZ,iBAAiB;IAC1Ba,QAAQ,EAAEZ,kBAAkB;IAC5Ba,KAAK,EAAE;GACR,EACD;IACEF,OAAO,EAAEZ,iBAAiB;IAC1Ba,QAAQ,EAAEX,oBAAoB;IAC9BY,KAAK,EAAE;GACR,CACF;EAAAC,UAbSlB,YAAY,EAAEU,OAAO;AAAA;;2EAepBC,UAAU;IAAAQ,eAhBNZ,gBAAgB,EAAEC,gBAAgB;IAAAU,UACvClB,YAAY,EAJPC,gBAAgB,EAAEK,cAAc,EAAEJ,YAAY;IAAAkB,UADtCb,gBAAgB,EAAEC,gBAAgB;EAAA;AAAA","names":["CommonModule","FlexLayoutModule","RouterModule","HTTP_INTERCEPTORS","LoadingInterceptor","HttpErrorInterceptor","MaterialModule","ToolbarComponent","LoadingComponent","CORE_COMPONENTS","MODULES","CoreModule","constructor","parentModule","Error","provide","useClass","multi","imports","declarations","exports"],"sourceRoot":"","sources":["C:\\Users\\pablo\\OneDrive\\Documentos\\Projetos\\grafico-variacao\\src\\app\\core\\core.module.ts"],"sourcesContent":["import { CommonModule } from '@angular/common';\r\nimport { NgModule, Optional, SkipSelf } from '@angular/core';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { RouterModule } from '@angular/router';\r\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { LoadingInterceptor } from './interceptors/loading.interceptor';\r\nimport { HttpErrorInterceptor } from './interceptors/http-error.interceptor';\r\nimport { MaterialModule } from '../material/material/material.module';\r\nimport { ToolbarComponent } from './components/toolbar/toolbar.component';\r\nimport { LoadingComponent } from './components/loading/loading.component';\r\n\r\nconst CORE_COMPONENTS = [ToolbarComponent, LoadingComponent];\r\nconst MODULES = [FlexLayoutModule, MaterialModule, RouterModule];\r\n\r\n@NgModule({\r\n  declarations: [ToolbarComponent, LoadingComponent],\r\n  imports: [CommonModule, MODULES],\r\n  exports: [CORE_COMPONENTS],\r\n  providers: [\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: LoadingInterceptor,\r\n      multi: true,\r\n    },\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: HttpErrorInterceptor,\r\n      multi: true,\r\n    },\r\n  ],\r\n})\r\nexport class CoreModule {\r\n  constructor(@Optional() @SkipSelf() parentModule?: CoreModule) {\r\n    if (parentModule) {\r\n      throw new Error(\r\n        'CoreModule has already been loaded. Import this module in the AppModule only.'\r\n      );\r\n    }\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { interval } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../core/services/finance.service\";\nimport * as i2 from \"@angular/material/tabs\";\nimport * as i3 from \"@angular/material/slide-toggle\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"./line-chart/line-chart.component\";\nimport * as i6 from \"./table-variation/table-variation.component\";\nexport class DashboardComponent {\n  constructor(financeService) {\n    this.financeService = financeService;\n    this.nomeAtivo = 'PETR4.SA';\n    this.updateData = true;\n    this.displayLimit = 30;\n    this.time = 60 * 1000;\n    this.variation = [];\n    this.onChange = () => {\n      if (!this.updateData) {\n        this.updateSubscription.unsubscribe();\n      } else {\n        this.getVariances();\n        this.updateSubscription = interval(this.time).subscribe(() => {\n          this.getVariances();\n        });\n      }\n    };\n    this.updateSubscription = interval(this.time).subscribe(() => {\n      this.getVariances();\n    });\n  }\n  ngOnInit() {\n    this.getVariances();\n  }\n  getVariances() {\n    this.financeService.getAll(this.nomeAtivo, this.displayLimit).subscribe(items => {\n      this.variation = items;\n    });\n  }\n  ngOnDestroy() {\n    this.updateSubscription.unsubscribe();\n  }\n}\nDashboardComponent.ɵfac = function DashboardComponent_Factory(t) {\n  return new (t || DashboardComponent)(i0.ɵɵdirectiveInject(i1.FinanceService));\n};\nDashboardComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: DashboardComponent,\n  selectors: [[\"app-dashboard\"]],\n  decls: 9,\n  vars: 4,\n  consts: [[3, \"ngModel\", \"change\", \"ngModelChange\"], [\"label\", \"Tabela\"], [3, \"dataBase\"], [\"label\", \"Gr\\u00E1fico\"], [3, \"data\"]],\n  template: function DashboardComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\");\n      i0.ɵɵtext(1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"mat-slide-toggle\", 0);\n      i0.ɵɵlistener(\"change\", function DashboardComponent_Template_mat_slide_toggle_change_2_listener() {\n        return ctx.onChange();\n      })(\"ngModelChange\", function DashboardComponent_Template_mat_slide_toggle_ngModelChange_2_listener($event) {\n        return ctx.updateData = $event;\n      });\n      i0.ɵɵtext(3, \"Atualizar automaticamente (60 segundos)\\n\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"mat-tab-group\")(5, \"mat-tab\", 1);\n      i0.ɵɵelement(6, \"app-table-variation\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"mat-tab\", 3);\n      i0.ɵɵelement(8, \"app-line-chart\", 4);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate(ctx.nomeAtivo);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngModel\", ctx.updateData);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"dataBase\", ctx.variation);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"data\", ctx.variation);\n    }\n  },\n  dependencies: [i2.MatTab, i2.MatTabGroup, i3.MatSlideToggle, i4.NgControlStatus, i4.NgModel, i5.LineChartComponent, i6.TableVariationComponent],\n  styles: [\".mat-.mat-mdc-slide-toggle[_ngcontent-%COMP%], .mat-accent[_ngcontent-%COMP%] {\\n  --mdc-switch-selected-focus-state-layer-color: #03fc56;\\n  --mdc-switch-selected-handle-color: #03fc56;\\n  --mdc-switch-selected-hover-state-layer-color: #03fc56;\\n  --mdc-switch-selected-pressed-state-layer-color: #03fc56;\\n  --mdc-switch-selected-focus-handle-color: #03fc56;\\n  --mdc-switch-selected-hover-handle-color: #03fc56;\\n  --mdc-switch-selected-pressed-handle-color: #03fc56;\\n  --mdc-switch-selected-focus-track-color: #03fc56;\\n  --mdc-switch-selected-hover-track-color: #03fc56;\\n  --mdc-switch-selected-pressed-track-color: #03fc56;\\n  --mdc-switch-selected-track-color: #03fc56;\\n}\\n\\n.mat-tab-label[_ngcontent-%COMP%], .mat-tab-label.mat-tab-label-active[_ngcontent-%COMP%] {\\n  color: #03fc56;\\n}\\n\\n.mat-ink-bar[_ngcontent-%COMP%] {\\n  background-color: #03fc56;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvZGFzaGJvYXJkL2Rhc2hib2FyZC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7RUFFRSxzREFBQTtFQUNBLDJDQUFBO0VBQ0Esc0RBQUE7RUFDQSx3REFBQTtFQUNBLGlEQUFBO0VBQ0EsaURBQUE7RUFDQSxtREFBQTtFQUNBLGdEQUFBO0VBQ0EsZ0RBQUE7RUFDQSxrREFBQTtFQUNBLDBDQUFBO0FBQ0Y7O0FBRUE7RUFDRSxjQUFBO0FBQ0Y7O0FBRUE7RUFDRSx5QkFBQTtBQUNGIiwic291cmNlc0NvbnRlbnQiOlsiLm1hdC0ubWF0LW1kYy1zbGlkZS10b2dnbGUsXHJcbi5tYXQtYWNjZW50IHtcclxuICAtLW1kYy1zd2l0Y2gtc2VsZWN0ZWQtZm9jdXMtc3RhdGUtbGF5ZXItY29sb3I6ICMwM2ZjNTY7XHJcbiAgLS1tZGMtc3dpdGNoLXNlbGVjdGVkLWhhbmRsZS1jb2xvcjogIzAzZmM1NjtcclxuICAtLW1kYy1zd2l0Y2gtc2VsZWN0ZWQtaG92ZXItc3RhdGUtbGF5ZXItY29sb3I6ICMwM2ZjNTY7XHJcbiAgLS1tZGMtc3dpdGNoLXNlbGVjdGVkLXByZXNzZWQtc3RhdGUtbGF5ZXItY29sb3I6ICMwM2ZjNTY7XHJcbiAgLS1tZGMtc3dpdGNoLXNlbGVjdGVkLWZvY3VzLWhhbmRsZS1jb2xvcjogIzAzZmM1NjtcclxuICAtLW1kYy1zd2l0Y2gtc2VsZWN0ZWQtaG92ZXItaGFuZGxlLWNvbG9yOiAjMDNmYzU2O1xyXG4gIC0tbWRjLXN3aXRjaC1zZWxlY3RlZC1wcmVzc2VkLWhhbmRsZS1jb2xvcjogIzAzZmM1NjtcclxuICAtLW1kYy1zd2l0Y2gtc2VsZWN0ZWQtZm9jdXMtdHJhY2stY29sb3I6ICMwM2ZjNTY7XHJcbiAgLS1tZGMtc3dpdGNoLXNlbGVjdGVkLWhvdmVyLXRyYWNrLWNvbG9yOiAjMDNmYzU2O1xyXG4gIC0tbWRjLXN3aXRjaC1zZWxlY3RlZC1wcmVzc2VkLXRyYWNrLWNvbG9yOiAjMDNmYzU2O1xyXG4gIC0tbWRjLXN3aXRjaC1zZWxlY3RlZC10cmFjay1jb2xvcjogIzAzZmM1NjtcclxufVxyXG5cclxuLm1hdC10YWItbGFiZWwsIC5tYXQtdGFiLWxhYmVsLm1hdC10YWItbGFiZWwtYWN0aXZlIHtcclxuICBjb2xvcjogIzAzZmM1NjtcclxufVxyXG5cclxuLm1hdC1pbmstYmFyIHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDNmYzU2O1xyXG59XHJcbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":"AAEA,SAASA,QAAQ,QAAsB,MAAM;;;;;;;;AAQ7C,OAAM,MAAOC,kBAAkB;EAS7BC,YAAoBC,cAA8B;IAA9B,mBAAc,GAAdA,cAAc;IARlC,cAAS,GAAG,UAAU;IACtB,eAAU,GAAG,IAAI;IACjB,iBAAY,GAAG,EAAE;IACjB,SAAI,GAAG,EAAE,GAAG,IAAI;IAChB,cAAS,GAAiB,EAAE;IAc5B,aAAQ,GAAG,MAAK;MACd,IAAI,CAAC,IAAI,CAACC,UAAU,EAAE;QACpB,IAAI,CAACC,kBAAkB,CAACC,WAAW,EAAE;OACtC,MAAM;QACL,IAAI,CAACC,YAAY,EAAE;QACnB,IAAI,CAACF,kBAAkB,GAAGL,QAAQ,CAAC,IAAI,CAACQ,IAAI,CAAC,CAACC,SAAS,CAAC,MAAK;UAC3D,IAAI,CAACF,YAAY,EAAE;QACrB,CAAC,CAAC;;IAEN,CAAC;IAlBC,IAAI,CAACF,kBAAkB,GAAGL,QAAQ,CAAC,IAAI,CAACQ,IAAI,CAAC,CAACC,SAAS,CAAC,MAAK;MAC3D,IAAI,CAACF,YAAY,EAAE;IACrB,CAAC,CAAC;EACJ;EAEAG,QAAQ;IACN,IAAI,CAACH,YAAY,EAAE;EACrB;EAaAA,YAAY;IACV,IAAI,CAACJ,cAAc,CAChBQ,MAAM,CAAC,IAAI,CAACC,SAAS,EAAE,IAAI,CAACC,YAAY,CAAC,CACzCJ,SAAS,CAAEK,KAAK,IAAI;MACnB,IAAI,CAACC,SAAS,GAAGD,KAAK;IACxB,CAAC,CAAC;EACN;EAEAE,WAAW;IACT,IAAI,CAACX,kBAAkB,CAACC,WAAW,EAAE;EACvC;;AAxCWL,kBAAkB;mBAAlBA,kBAAkB;AAAA;AAAlBA,kBAAkB;QAAlBA,kBAAkB;EAAAgB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCV/BC,0BAAI;MAAAA,YAAe;MAAAA,iBAAK;MAExBA,2CACG;MADeA;QAAA,OAAUC,cAAU;MAAA,EAAC;QAAA;MAAA;MACpCD,yDACH;MAAAA,iBAAmB;MAEnBA,qCAAe;MAEXA,yCAAkE;MACpEA,iBAAU;MACVA,kCAAyB;MACvBA,oCAAoD;MACtDA,iBAAU;;;MAZRA,eAAe;MAAfA,mCAAe;MAEqBA,eAAwB;MAAxBA,wCAAwB;MAMvCA,eAAsB;MAAtBA,wCAAsB;MAG3BA,eAAkB;MAAlBA,oCAAkB","names":["interval","DashboardComponent","constructor","financeService","updateData","updateSubscription","unsubscribe","getVariances","time","subscribe","ngOnInit","getAll","nomeAtivo","displayLimit","items","variation","ngOnDestroy","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\pablo\\OneDrive\\Documentos\\Projetos\\grafico-variacao\\src\\app\\dashboard\\dashboard.component.ts","C:\\Users\\pablo\\OneDrive\\Documentos\\Projetos\\grafico-variacao\\src\\app\\dashboard\\dashboard.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FinanceService } from '../core/services/finance.service';\nimport { interval, Subscription } from 'rxjs';\nimport { IVariation } from '../core/models/variation.model';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss'],\n})\nexport class DashboardComponent implements OnInit {\n  nomeAtivo = 'PETR4.SA';\n  updateData = true;\n  displayLimit = 30;\n  time = 60 * 1000;\n  variation: IVariation[] = [];\n\n  private updateSubscription: Subscription;\n\n  constructor(private financeService: FinanceService) {\n    this.updateSubscription = interval(this.time).subscribe(() => {\n      this.getVariances();\n    });\n  }\n\n  ngOnInit(): void {\n    this.getVariances();\n  }\n\n  onChange = () => {\n    if (!this.updateData) {\n      this.updateSubscription.unsubscribe();\n    } else {\n      this.getVariances();\n      this.updateSubscription = interval(this.time).subscribe(() => {\n        this.getVariances();\n      });\n    }\n  };\n\n  getVariances(): void {\n    this.financeService\n      .getAll(this.nomeAtivo, this.displayLimit)\n      .subscribe((items) => {\n        this.variation = items;\n      });\n  }\n\n  ngOnDestroy(): void {\n    this.updateSubscription.unsubscribe();\n  }\n}\n","<h1>{{ nomeAtivo }}</h1>\n\n<mat-slide-toggle (change)=\"onChange()\" [(ngModel)]=\"updateData\"\n  >Atualizar automaticamente (60 segundos)\n</mat-slide-toggle>\n\n<mat-tab-group>\n  <mat-tab label=\"Tabela\">\n    <app-table-variation [dataBase]=\"variation\"></app-table-variation>\n  </mat-tab>\n  <mat-tab label=\"Gráfico\">\n    <app-line-chart [data]=\"variation\"></app-line-chart>\n  </mat-tab>\n</mat-tab-group>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}